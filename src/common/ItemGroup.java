package common;public class ItemGroup {    private int itemCount;    private int reservedCount;    private int price;    private final String key;    private final String itemType;        public ItemGroup(            String itemType,            String key,            int itemCount,            int price) {        this.itemType = itemType;        this.key = key;        this.itemCount = itemCount;        this.price = price;        reservedCount = 0;    }    public void setCount(int count) {         if(itemCount < 0)            throw new RuntimeException("Item count must be nonnegative.");        if(itemCount < reservedCount)            throw new RuntimeException(                    "New item count would be less than number of reservations."            );        this.itemCount = count;     }    public int getCount() {         return itemCount;    }    public void setPrice(int price) {         if(price < 0)            throw new RuntimeException("Item count must be nonnegative.");        this.price = price;    }    public int getPrice() {         return price;     }    public void reserve(int r) {        if(r <= 0)            throw new RuntimeException(                    "Number of items to reserve must be positive.");        if(reservedCount + r > itemCount)            throw new RuntimeException(                    "Insufficient items available to perform reservation.");        reservedCount += r;     }    public int getReservedCount() {         return reservedCount;     }    public int getAvailableCount() {        return itemCount - reservedCount;    }    public String getKey() {         return key;    }    public String getItemType() {        return itemType;    }}